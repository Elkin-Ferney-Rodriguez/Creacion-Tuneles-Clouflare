#!/bin/bash

CONFIG_BASE="$HOME/Contenedores/InstalacioCloudflared"
CONFIG_DIR="$CONFIG_BASE/configs/tunnels"
SERVICE_DIR="/etc/systemd/system"
CRED_DIR="$CONFIG_BASE/credenciales"

# Verificaci√≥n de login si corresponde
if [[ -f "$(dirname "$0")/verificar_login.sh" ]]; then
    source "$(dirname "$0")/verificar_login.sh"
    verificar_login || exit 1
fi

clear
echo "===== ELIMINAR T√öNEL CLOUDFLARED ====="

# Obtener lista de t√∫neles
TUNNEL_LIST=$(cloudflared tunnel list 2>&1)
if echo "$TUNNEL_LIST" | grep -q "No tunnels were found"; then
    echo "‚ùå No hay t√∫neles disponibles para eliminar."
    read -p "Presiona Enter para continuar..."
    exit 0
fi

# Mostrar t√∫neles numerados
echo "$TUNNEL_LIST" | tail -n +2 | awk '{print NR ") " $2 " (ID: " $1 ")"}'
echo "0) Salir"
echo "======================================"
read -p "Selecciona el n√∫mero del t√∫nel a eliminar: " seleccion

# Validaci√≥n
TUNNEL_COUNT=$(echo "$TUNNEL_LIST" | tail -n +2 | wc -l)
if [[ "$seleccion" == "0" ]]; then
    echo "Saliendo..."
    exit 0
elif ! [[ "$seleccion" =~ ^[0-9]+$ ]] || (( seleccion < 1 || seleccion > TUNNEL_COUNT )); then
    echo "‚ùå Selecci√≥n inv√°lida."
    read -p "Presiona Enter para continuar..."
    exit 1
fi

ID_TUNEL=$(echo "$TUNNEL_LIST" | tail -n +2 | awk '{print $1}' | sed -n "${seleccion}p")
NOMBRE_TUNEL=$(echo "$TUNNEL_LIST" | tail -n +2 | awk '{print $2}' | sed -n "${seleccion}p")

if [[ -z "$ID_TUNEL" || -z "$NOMBRE_TUNEL" ]]; then
    echo "‚ùå No se pudo obtener la informaci√≥n del t√∫nel."
    read -p "Presiona Enter para continuar..."
    exit 1
fi

# Mostrar estado del servicio
if systemctl is-active --quiet "cloudflared-$NOMBRE_TUNEL.service"; then
    echo "‚ö†Ô∏è El t√∫nel '$NOMBRE_TUNEL' est√° activo. Deteni√©ndolo..."
    sudo systemctl stop "cloudflared-$NOMBRE_TUNEL.service"
fi

# Obtener hostname del t√∫nel
TUNNEL_INFO=$(cloudflared tunnel info "$ID_TUNEL" 2>&1)
HOSTNAME=$(echo "$TUNNEL_INFO" | grep -oP "(?<=CNAME: ).*?(?=$)" | head -1)
[[ -z "$HOSTNAME" ]] && HOSTNAME=$(echo "$TUNNEL_INFO" | grep -oP "(?<=hostname: ).*?(?=$)" | head -1)

# Cleanup conexiones
echo "üîç Ejecutando cleanup de conexiones..."
cloudflared tunnel cleanup "$ID_TUNEL" &>/dev/null

# Eliminar DNS
if [[ -n "$HOSTNAME" ]]; then
    echo "üóëÔ∏è Eliminando registro DNS para $HOSTNAME..."
    cloudflared tunnel route dns -d "$HOSTNAME" "$ID_TUNEL" &>/dev/null || \
    echo "‚ö†Ô∏è No se pudo eliminar el registro DNS (puede ya no existir)."
fi

# Eliminar t√∫nel
echo "üóëÔ∏è Eliminando t√∫nel '$NOMBRE_TUNEL'..."
DELETE_OUTPUT=$(cloudflared tunnel delete "$ID_TUNEL" 2>&1)
if echo "$DELETE_OUTPUT" | grep -qi "error"; then
    echo "‚ö†Ô∏è Error al eliminar el t√∫nel: $DELETE_OUTPUT"
    read -p "¬øDeseas continuar con la limpieza de archivos locales? (s/N): " CONTINUE
    [[ ! "$CONTINUE" =~ ^[Ss]$ ]] && exit 1
fi

# Eliminar servicio systemd
if [[ -f "$SERVICE_DIR/cloudflared-$NOMBRE_TUNEL.service" ]]; then
    echo "üßπ Eliminando servicio systemd..."
    sudo systemctl disable "cloudflared-$NOMBRE_TUNEL.service" &>/dev/null || true
    sudo rm -f "$SERVICE_DIR/cloudflared-$NOMBRE_TUNEL.service"
    sudo systemctl daemon-reload
fi

# Eliminar archivos de configuraci√≥n y credenciales
CONFIG_PATH="$CONFIG_DIR/$NOMBRE_TUNEL"
CRED_FILE="$CRED_DIR/$NOMBRE_TUNEL.json"

[[ -d "$CONFIG_PATH" ]] && rm -rf "$CONFIG_PATH" && echo "‚úÖ Configuraci√≥n eliminada."
[[ -f "$CRED_FILE" ]] && rm -f "$CRED_FILE" && echo "‚úÖ Credenciales eliminadas."

echo "‚úÖ T√∫nel '$NOMBRE_TUNEL' eliminado correctamente."

read -p "¬øDeseas eliminar otro t√∫nel? (s/N): " repetir
[[ "$repetir" =~ ^[Ss]$ ]] && exec "$0"

exit 0
